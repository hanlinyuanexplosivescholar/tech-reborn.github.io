<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>reborn's technical blog</title><link>https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io</link><description>Here are some technical shares of personal interest</description><copyright>reborn's technical blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/68176923?v=4</url><title>avatar</title><link>https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io</link></image><lastBuildDate>Wed, 09 Jul 2025 16:12:47 +0000</lastBuildDate><managingEditor>reborn's technical blog</managingEditor><ttl>60</ttl><webMaster>reborn's technical blog</webMaster><item><title>深入理解DevOps：现代软件交付的全面指南</title><link>https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/shen-ru-li-jie-DevOps%EF%BC%9A-xian-dai-ruan-jian-jiao-fu-de-quan-mian-zhi-nan.html</link><description>## 1. 引言：DevOps是什么以及为何重要

DevOps代表了一种文化理念、实践和工具的融合，旨在显著提升组织交付应用程序和服务的速度。</description><guid isPermaLink="true">https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/shen-ru-li-jie-DevOps%EF%BC%9A-xian-dai-ruan-jian-jiao-fu-de-quan-mian-zhi-nan.html</guid><pubDate>Wed, 09 Jul 2025 15:59:10 +0000</pubDate></item><item><title>跨域问题及后端解决方案</title><link>https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/kua-yu-wen-ti-ji-hou-duan-jie-jue-fang-an.html</link><description>## 引言

在现代高度互联的网络世界中，应用程序经常需要与来自不同域的资源进行交互。</description><guid isPermaLink="true">https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/kua-yu-wen-ti-ji-hou-duan-jie-jue-fang-an.html</guid><pubDate>Mon, 07 Jul 2025 04:10:40 +0000</pubDate></item><item><title>接口鉴权方案之JWT</title><link>https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/jie-kou-jian-quan-fang-an-zhi-JWT.html</link><description>在现代分布式系统和微服务架构中，身份认证和授权机制的选择至关重要。</description><guid isPermaLink="true">https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/jie-kou-jian-quan-fang-an-zhi-JWT.html</guid><pubDate>Sun, 06 Jul 2025 17:33:20 +0000</pubDate></item><item><title>Single Sign-on(SSO) 流程概览</title><link>https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/Single%20Sign-on%28SSO%29%20-liu-cheng-gai-lan.html</link><description>SSO 的核心原理
SSO 的核心在于信任关系。</description><guid isPermaLink="true">https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/Single%20Sign-on%28SSO%29%20-liu-cheng-gai-lan.html</guid><pubDate>Sun, 06 Jul 2025 17:05:38 +0000</pubDate></item><item><title>分布式ID设计：以MongoDB ObjectId为例</title><link>https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/fen-bu-shi-ID-she-ji-%EF%BC%9A-yi-MongoDB%20ObjectId-wei-li.html</link><description>### 引言：MongoDB 文档的无名英雄

在 MongoDB 中，每个集合内的文档都必须有一个唯一的标识符，即 `_id` 字段，它充当文档的主键。</description><guid isPermaLink="true">https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/fen-bu-shi-ID-she-ji-%EF%BC%9A-yi-MongoDB%20ObjectId-wei-li.html</guid><pubDate>Sun, 06 Jul 2025 16:23:36 +0000</pubDate></item><item><title>MongoDB ：分片场景下upsert踩坑记录</title><link>https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/MongoDB%20%EF%BC%9A-fen-pian-chang-jing-xia-upsert-cai-keng-ji-lu.html</link><description>事发经过：
       生产环境Mongo数据膨胀很快，需要使用分片集群扩容。</description><guid isPermaLink="true">https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/MongoDB%20%EF%BC%9A-fen-pian-chang-jing-xia-upsert-cai-keng-ji-lu.html</guid><pubDate>Sun, 06 Jul 2025 16:15:43 +0000</pubDate></item><item><title>CAP理论详解以及在不同数据库集群中的应用</title><link>https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/CAP-li-lun-xiang-jie-yi-ji-zai-bu-tong-shu-ju-ku-ji-qun-zhong-de-ying-yong.html</link><description>## I. 引言：驾驭分布式系统的复杂性

在当今互联互通的世界中，应用程序很少仅限于一台服务器。</description><guid isPermaLink="true">https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/CAP-li-lun-xiang-jie-yi-ji-zai-bu-tong-shu-ju-ku-ji-qun-zhong-de-ying-yong.html</guid><pubDate>Sun, 06 Jul 2025 15:13:53 +0000</pubDate></item><item><title>Docker 实现原理深度解析</title><link>https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/Docker%20-shi-xian-yuan-li-shen-du-jie-xi.html</link><description>## 引言：超越“在我的机器上能跑”的问题

在软件开发领域，开发者们普遍面临一个令人沮丧的挑战，即“在我的机器上能跑”的问题。</description><guid isPermaLink="true">https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/Docker%20-shi-xian-yuan-li-shen-du-jie-xi.html</guid><pubDate>Sun, 06 Jul 2025 14:55:19 +0000</pubDate></item><item><title>深入理解限流算法：种类、原理与实践</title><link>https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/shen-ru-li-jie-xian-liu-suan-fa-%EF%BC%9A-zhong-lei-%E3%80%81-yuan-li-yu-shi-jian.html</link><description># 深入理解限流算法：种类、原理与实践

在当今高度互联的数字世界中，计算机系统面临着前所未有的流量挑战。</description><guid isPermaLink="true">https://hanlinyuanexplosivescholar.github.io/tech-reborn.github.io/post/shen-ru-li-jie-xian-liu-suan-fa-%EF%BC%9A-zhong-lei-%E3%80%81-yuan-li-yu-shi-jian.html</guid><pubDate>Sun, 06 Jul 2025 08:53:01 +0000</pubDate></item></channel></rss>